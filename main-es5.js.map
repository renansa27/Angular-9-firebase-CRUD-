{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/service/crud.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","crudservice","title","get_Allcontato","subscribe","data","contato","map","payload","doc","isedit","nome","descricao","telefone","console","log","Registro","contatoNome","contatoDescricao","contatoTelefone","create_Newcontato","res","undefined","message","error","editNome","editDescricao","editTelefone","registrodata","registro","update_contato","registro_id","delete_contato","CreateRegistro","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","imports","providers","bootstrap","CrudService","fireservices","collection","add","snapshotChanges","registroid","update","providedIn","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\nimport { CrudService } from './service/crud.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'agenda-telefonica';\r\n\r\n  contato: any;\r\n  contatoNome: string;\r\n  contatoDescricao: string;\r\n  contatoTelefone: string;\r\n  message: string;\r\n\r\n\r\n  constructor(public crudservice: CrudService) { }\r\n\r\n  ngOnInit() {\r\n    this.crudservice.get_Allcontato().subscribe(data => {\r\n\r\n      this.contato = data.map(e => {\r\n        return {\r\n          id: e.payload.doc.id,\r\n          isedit: false,\r\n          nome: e.payload.doc.data()['nome'],\r\n          descricao: e.payload.doc.data()['descricao'],\r\n          telefone: e.payload.doc.data()['telefone'],\r\n        };\r\n      })\r\n      console.log(this.contato);\r\n    });\r\n  }\r\n\r\n  CreateRegistro() {\r\n    let Registro = {};\r\n    Registro['nome'] = this.contatoNome;\r\n    Registro['descricao'] = this.contatoDescricao;\r\n    Registro['telefone'] = this.contatoTelefone;\r\n\r\n    this.crudservice.create_Newcontato(Registro).then(res => {\r\n\r\n      this.contatoNome = \"\";\r\n      this.contatoDescricao = undefined;\r\n      this.contatoTelefone = \"\";\r\n      console.log(res);\r\n      this.message = \"Contato Registrado\";\r\n    }).catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  EditRegistro(Registro) {\r\n    Registro.isedit = true;\r\n    Registro.editNome = Registro.nome;\r\n    Registro.editDescricao = Registro.descricao;\r\n    Registro.editTelefone = Registro.telefone;\r\n\r\n  }\r\n\r\n  Updataregistro(registrodata) {\r\n    let registro = {};\r\n    registro['nome'] = registrodata.editNome;\r\n    registro['descricao'] = registrodata.editDescricao;\r\n    registro['telefone'] = registrodata.editTelefone;\r\n    this.crudservice.update_contato(registrodata.id, registro);\r\n    registrodata.isedit = false;\r\n  }\r\n\r\n  Deletecontato(registro_id) {\r\n    this.crudservice.delete_contato(registro_id);\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-dark\">\r\n    Angular 9 & Firebase - Renan SÃ¡ Cavalcante\r\n</nav>\r\n<div class=\"container\">\r\n    <div class=\"row justify-content-center p-2\">\r\n        <h1>Agenda TelefÃ´nica</h1>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"contatoNome\" placeholder=\"Nome\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"contatoDescricao\" placeholder=\"DescriÃ§Ã£o\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"contatoTelefone\" placeholder=\"Telefone\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button class=\"btn btn-primary\" (click)=\"CreateRegistro()\"\r\n            [disabled]=\"!contatoNome || !contatoDescricao || !contatoTelefone\">Criar Contato</button>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <h4><b>{{message}}</b></h4>\r\n    </div>\r\n    <div class=\"row p-2\">\r\n        <div class=\"col-md-12 p-2 justify-content-center\">\r\n            <h4>Todos os contatos</h4>\r\n        </div>\r\n        <div class=\"col-md-3\" *ngFor=\"let item of contato\">\r\n            <div class=\"card\" *ngIf=\"!item.isedit; else elseBlock\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"card-title\">\r\n                        Nome: {{item.nome}}\r\n                    </div>\r\n                    <div class=\"card-subtitle\">\r\n                        DescriÃ§Ã£o: {{item.descricao}}\r\n                    </div>\r\n                    <div class=\"mt-2 card-text\">\r\n                        Telefone: {{item.telefone}}\r\n                    </div>\r\n                    <span>\r\n                        <a href=\"#\" (click)=\"EditRegistro(item)\" class=\"mt-2 btn btn-primary btn-xs\">Editar Contato</a>\r\n                        <a href=\"#\" (click)=\"Deletecontato(item.id)\" class=\"mt-1 btn btn-danger btn-xs\">Deletar\r\n                            Contato</a>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <ng-template #elseBlock>\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <div class=\"card-title\">\r\n                            Alterar Contato\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"col-md-12\">\r\n                                    <input type=\"text\" [(ngModel)]=\"item.editNome\" class=\"form-control\">\r\n                                </div>\r\n                                <div class=\"mt-1 col-md-12\">\r\n                                    <input type=\"text\" [(ngModel)]=\"item.editDescricao\" class=\"form-control\">\r\n                                </div>\r\n                                <div class=\"mt-1 col-md-12\">\r\n                                    <input type=\"text\" [(ngModel)]=\"item.editTelefone\" class=\"form-control\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <a href=\"#\" class=\"btn btn-danger btn-xs\" (click)=\"item.isedit = false\">Cancelar</a>\r\n                        <a href=\"#\" class=\"ml-2 btn btn-primary btn-xs\" (click)=\"Updataregistro(item)\">Atualizar</a>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </div>\r\n    </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\r\nimport { environment } from '../environments/environment';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\n\r\nimport { CrudService } from './service/crud.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireDatabaseModule,\r\n    AngularFirestoreModule,\r\n    NgbModule\r\n  ],\r\n  providers: [CrudService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {AngularFirestore} from '@angular/fire/firestore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrudService {\r\n\r\n  constructor(public fireservices:AngularFirestore) { }\r\n\r\n  create_Newcontato(Registro)\r\n  {\r\n    return this.fireservices.collection('ContatosFB').add(Registro);\r\n  }\r\n\r\n  get_Allcontato()\r\n  {\r\n    return this.fireservices.collection('ContatosFB').snapshotChanges();\r\n  }\r\n\r\n  update_contato(registroid, registro)\r\n  {\r\n    this.fireservices.doc('ContatosFB/' + registroid).update(registro);\r\n  }\r\n\r\n  delete_contato(registro_id)\r\n  {\r\n    this.fireservices.doc('ContatosFB/' + registro_id).delete();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: \"AIzaSyCOZczcvASdMEmQXB1TZL2LlKph0WELAoU\",\r\n    authDomain: \"crud-angular-cfd53.firebaseapp.com\",\r\n    databaseURL: \"https://crud-angular-cfd53.firebaseio.com\",\r\n    projectId: \"crud-angular-cfd53\",\r\n    storageBucket: \"crud-angular-cfd53.appspot.com\",\r\n    messagingSenderId: \"350259780818\",\r\n    appId: \"1:350259780818:web:d00fd2022e1aa1a8df610b\",\r\n    measurementId: \"G-NRDLVQ872W\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}